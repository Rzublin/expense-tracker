{"version":3,"sources":["components/Header.js","store/transactions/Context.js","components/Balance.js","components/IncomeExpenses.js","components/TransactionItem.js","store/transactions/actions.js","store/transactions/types.js","components/TransactionList.js","components/TransactionAddItem.js","store/transactions/reducer.js","store/transactions/Provider.js","App.js","index.js"],"names":["Header","Context","createContext","Balance","transactions","useContext","TransactionsContext","reduce","a","b","amount","IncomeExpenses","className","id","length","filter","transaction","Math","abs","TransactionItem","dispatchTransaction","onClick","type","payload","text","TransactionList","map","key","TransactionAddItem","useState","setText","setAmount","value","onChange","e","target","placeholder","preventDefault","transactionActions","Number","reducer","state","action","element","Error","initialState","Provider","children","useReducer","transactionReducer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAEMA,EAAS,WACb,OACE,6BACE,iDCDSC,EAFCC,wBAAc,MCWfC,MAVf,WAAoB,IACVC,EAAiBC,qBAAWC,GAA5BF,aACR,OACE,kBAAC,WAAD,KACE,4CACA,sCAAOA,EAAaG,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAEC,SAAQ,MC2B1CC,MAhCf,WAA2B,IACjBP,EAAiBC,qBAAWC,GAA5BF,aACR,OACE,yBAAKQ,UAAU,qBACb,6BACE,sCACA,uBAAGC,GAAG,aAAaD,UAAU,cAA7B,UAEGR,EAAaU,OAAS,EACnBV,EACGW,QAAO,SAACC,GAAD,OAAiBA,EAAYN,QAAU,KAC9CH,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAEC,SAAQ,GAClC,IAGR,6BACE,uCACA,uBAAGG,GAAG,cAAcD,UAAU,eAA9B,UAEGR,EAAaU,OAAS,EACnBG,KAAKC,IACHd,EACGW,QAAO,SAACC,GAAD,OAAiBA,EAAYN,OAAS,KAC7CH,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,EAAEC,SAAQ,IAEpC,MCGCS,MA1Bf,YAA2C,IAAhBH,EAAe,EAAfA,YACjBI,EAAwBf,qBAAWC,GAAnCc,oBACR,OACE,wBAAIR,UAAWI,EAAYN,OAAS,EAAI,OAAS,SAC/C,4BACEE,UAAU,aACVS,QAAS,kBACPD,ECMD,CACLE,KClB8B,qBDmB9BC,QAAS,CACPC,KDR2CR,EAAYQ,UAJvD,KAUA,kCAAQR,EAAYQ,MACpB,8BACGR,EAAYN,OAAS,EAAI,IAAM,IADlC,SACwCO,KAAKC,IAAIF,EAAYN,WGFpDe,MAff,WAA4B,IAClBrB,EAAiBC,qBAAWC,GAA5BF,aACR,OACE,6BACE,uCACA,wBAAIQ,UAAU,QACXR,GACCA,EAAasB,KAAI,SAACV,GAAD,OACf,kBAAC,EAAD,CAAiBW,IAAKX,EAAYQ,KAAMR,YAAaA,U,OCwClDY,MAhDf,WAA+B,IAAD,EACJC,mBAAS,IADL,mBACrBL,EADqB,KACfM,EADe,OAEAD,mBAAS,GAFT,mBAErBnB,EAFqB,KAEbqB,EAFa,KAGpBX,EAAwBf,qBAAWC,GAAnCc,oBACR,OACE,kBAAC,WAAD,KACE,mDACA,8BACE,yBAAKR,UAAU,gBACb,uCACA,2BACEU,KAAK,OACLU,MAAOR,EACPS,SAAU,SAACC,GAAD,OAAOJ,EAAQI,EAAEC,OAAOH,QAClCI,YAAY,mBAGhB,yBAAKxB,UAAU,gBACb,yCACS,6BADT,4CAGA,2BACEU,KAAK,SACLU,MAAOtB,EACPuB,SAAU,SAACC,GAAD,OAAOH,EAAUG,EAAEC,OAAOH,QACpCI,YAAY,mBAGhB,4BACExB,UAAU,MACVS,QAAS,SAACa,GACRA,EAAEG,iBACEb,GAAQd,IACVU,EH9BP,SAAwBI,EAAMd,GACnC,MAAO,CACLY,KCT2B,kBDU3BC,QAAS,CACPC,OACAd,WG0BU4B,CAAkCd,EAAMe,OAAO7B,KAEjDoB,EAAQ,IACRC,EAAU,OAThB,sB,OChBOS,MAdf,SAAiBC,EAAOC,GACtB,OAAQA,EAAOpB,MACb,IHJ2B,kBGKzB,MAAM,GAAN,mBACKmB,GADL,CAEE,CAAEjB,KAAMkB,EAAOnB,QAAQC,KAAMd,OAAQgC,EAAOnB,QAAQb,UAExD,IHR8B,qBGS5B,OAAO+B,EAAM1B,QAAO,SAAC4B,GAAD,OAAaA,EAAQnB,OAASkB,EAAOnB,QAAQC,QACnE,QACE,MAAM,IAAIoB,QCRVC,EAAe,CACnB,CAAErB,KAAM,SAAUd,QAAS,KAC3B,CAAEc,KAAM,OAAQd,QAAS,IACzB,CAAEc,KAAM,OAAQd,OAAQ,MAgBXoC,MAbf,YAAiC,IAAbC,EAAY,EAAZA,SAAY,EACcC,qBAC1CC,EACAJ,GAH4B,mBACvBzC,EADuB,KACTgB,EADS,KAM9B,OACE,kBAAC,EAAmB0B,SAApB,CAA6Bd,MAAO,CAAE5B,eAAcgB,wBACjD2B,I,MCOQG,MAhBf,WACE,OACE,6BACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,yBAAKtC,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,UCdVuC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d578c8d1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <h1>Expense Tracker</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Header as default };\r\n","import { createContext } from \"react\";\r\n\r\nconst Context = createContext(null);\r\n\r\nexport default Context;\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport TransactionsContext from \"../store/transactions/Context\";\r\n\r\nfunction Balance() {\r\n  const { transactions } = useContext(TransactionsContext);\r\n  return (\r\n    <Fragment>\r\n      <h4>Your Balance</h4>\r\n      <h1>€ {transactions.reduce((a, b) => a + b.amount, 0)}</h1>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Balance;\r\n","import React, { useContext } from \"react\";\r\nimport TransactionsContext from \"../store/transactions/Context\";\r\n\r\nfunction IncomeExpenses() {\r\n  const { transactions } = useContext(TransactionsContext);\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p id=\"money-plus\" className=\"money plus\">\r\n          +€\r\n          {transactions.length > 0\r\n            ? transactions\r\n                .filter((transaction) => transaction.amount >= 0)\r\n                .reduce((a, b) => a + b.amount, 0)\r\n            : 0}\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p id=\"money-minus\" className=\"money minus\">\r\n          -€\r\n          {transactions.length > 0\r\n            ? Math.abs(\r\n                transactions\r\n                  .filter((transaction) => transaction.amount < 0)\r\n                  .reduce((a, b) => a + b.amount, 0)\r\n              )\r\n            : 0}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IncomeExpenses;\r\n","import React, { useContext } from \"react\";\r\nimport TransactionsContext from \"../store/transactions/Context\";\r\nimport * as transactionActions from \"../store/transactions/actions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction TransactionItem({ transaction }) {\r\n  const { dispatchTransaction } = useContext(TransactionsContext);\r\n  return (\r\n    <li className={transaction.amount > 0 ? \"plus\" : \"minus\"}>\r\n      <button\r\n        className=\"delete-btn\"\r\n        onClick={() =>\r\n          dispatchTransaction(\r\n            transactionActions.removeTransaction(transaction.text)\r\n          )\r\n        }\r\n      >\r\n        X\r\n      </button>\r\n      <span> {transaction.text}</span>\r\n      <span>\r\n        {transaction.amount > 0 ? \"+\" : \"-\"}€{Math.abs(transaction.amount)}\r\n      </span>\r\n    </li>\r\n  );\r\n}\r\n\r\nTransactionItem.propTypes = {\r\n  transaction: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default TransactionItem;\r\n","import * as transactionTypes from \"./types\";\r\n\r\n/* {\r\n    text: \"Camera\", \r\n    amount: -200\r\n} */\r\n\r\nexport function addTransaction(text, amount) {\r\n  return {\r\n    type: transactionTypes.ADD_TRANSACTION,\r\n    payload: {\r\n      text,\r\n      amount,\r\n    },\r\n  };\r\n}\r\n\r\nexport function removeTransaction(text) {\r\n  return {\r\n    type: transactionTypes.REMOVE_TRANSACTION,\r\n    payload: {\r\n      text,\r\n    },\r\n  };\r\n}\r\n","export const ADD_TRANSACTION = \"ADD_TRANSACTION\";\r\nexport const REMOVE_TRANSACTION = \"REMOVE_TRANSACTION\";\r\n","import React, { useContext } from \"react\";\r\nimport TransactionsContext from \"../store/transactions/Context\";\r\nimport TransactionItem from \"./TransactionItem\";\r\n\r\nfunction TransactionList() {\r\n  const { transactions } = useContext(TransactionsContext);\r\n  return (\r\n    <div>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions &&\r\n          transactions.map((transaction) => (\r\n            <TransactionItem key={transaction.text} transaction={transaction} />\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionList;\r\n","import React, { Fragment, useState, useContext } from \"react\";\r\nimport TransactionsContext from \"../store/transactions/Context\";\r\nimport * as transactionActions from \"../store/transactions/actions\";\r\n\r\nfunction TransactionAddItem() {\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const { dispatchTransaction } = useContext(TransactionsContext);\r\n  return (\r\n    <Fragment>\r\n      <h3>Add new transaction</h3>\r\n      <form>\r\n        <div className=\"form-control\">\r\n          <label>Text</label>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label>\r\n            Amount <br /> (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"btn\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            if (text && amount) {\r\n              dispatchTransaction(\r\n                transactionActions.addTransaction(text, Number(amount))\r\n              );\r\n              setText(\"\");\r\n              setAmount(\"\");\r\n            }\r\n          }}\r\n        >\r\n          Add Transaction\r\n        </button>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default TransactionAddItem;\r\n","import * as transactionTypes from \"./types\";\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case transactionTypes.ADD_TRANSACTION:\r\n      return [\r\n        ...state,\r\n        { text: action.payload.text, amount: action.payload.amount },\r\n      ];\r\n    case transactionTypes.REMOVE_TRANSACTION:\r\n      return state.filter((element) => element.text !== action.payload.text);\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import React, { useReducer } from \"react\";\r\nimport TransactionContext from \"./Context\";\r\nimport transactionReducer from \"./reducer\";\r\n\r\nconst initialState = [\r\n  { text: \"Camera\", amount: -200 },\r\n  { text: \"Book\", amount: -40 },\r\n  { text: \"Cash\", amount: 500 },\r\n];\r\n\r\nfunction Provider({ children }) {\r\n  const [transactions, dispatchTransaction] = useReducer(\r\n    transactionReducer,\r\n    initialState\r\n  );\r\n\r\n  return (\r\n    <TransactionContext.Provider value={{ transactions, dispatchTransaction }}>\r\n      {children}\r\n    </TransactionContext.Provider>\r\n  );\r\n}\r\n\r\nexport default Provider;\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Balance from \"./components/Balance\";\nimport IncomeExpenses from \"./components/IncomeExpenses\";\nimport TransactionList from \"./components/TransactionList\";\nimport TransactionAddItem from \"./components/TransactionAddItem\";\nimport TransactionsProvider from \"./store/transactions/Provider\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <TransactionsProvider>\n        <Header />\n        <div className=\"container\">\n          <Balance />\n          <IncomeExpenses />\n          <TransactionList />\n          <TransactionAddItem />\n        </div>\n      </TransactionsProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}